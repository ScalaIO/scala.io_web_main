{
    "name": "Ramiro Sarmiento Calle",
    "bio": "J'ai commenc√© par du C++, d√©riv√© vers du PHP, continu√© par du Java, chang√© de cap vers du C#, explor√© du Groovy pour enfin arriver en terre Scala il y a 4 ans.",
    "twitter": "rrramiro",
    "company": "MNT",
    "url": "",
    "avatar": "https://secure.gravatar.com/avatar/6c34a61046cd64bafdc1e695d97c7fd9?s=500",
    "talks": [
        {
            "title": "Railway Oriented Programming - Une approche fonctionnelle pour la gestion d'erreurs",
            "description": "La terminologie en programmation fonctionnelle peut en perdre plus d'un. Nous essayons dans cette pr√©sentation de d√©mystifier les Monades et voir comment elles peuvent nous aider √† r√©soudre un probl√®me comme la gestion des erreurs, de fa√ßon pragmatique.\r\n\r\nCette pr√©sentation s'adresse plut√¥t √† un public d√©butant. Mais elle peut aussi √™tre utile aux formateurs qui cherchent un moyen didactique de communiquer le concept des Monades. Elle est tr√®s fortement inspir√©e de la pr√©sentation pour F#, de Scott Walschin, portant le m√™me titre. C'est d'ailleurs la raison pour laquelle j'ai demand√© son autorisation et ai laiss√© le titre en anglais.\r\n\r\nPour commencer, nous montrons les dysfonctionnements d'une approche \"optimiste\" imp√©rative. Ensuite nous abordons l'id√©e g√©n√©rale du \"Railway Oriented Programming\". Il s'agit d'une approche fonctionnelle o√π nous visualisons les branches d'ex√©cution de code comme un r√©seau ferroviaire. Enfin nous voyons comment porter le concept un peu plus loin avec les \"Monad Transformers\".",
            "abstract": "Avez vous d√©j√† entendu : \"Je n'ai pas besoin de tes %@$! de Monades. Je veux simplement g√©rer mes erreurs !\". Visualisons les branches d'ex√©cution de code comme un r√©seau ferroviaire, avec des aiguillages, des voies de garage, des impasses ... finalement la fa√ßon fonctionnelle n'est pas si complexe.",
            "audience_level": "Beginner",
            "talk_format": "Talk (45 minutes)",
            "tags": [
                "üá´üá∑",
                "monad",
                "scala"
            ]
        }
    ]
}