{
    "name": "Damien Gouyette",
    "bio": "Petit producteur de systÃ¨mes event sourcÃ©s depuis 2014. \r\nIl assure lui mÃªme l'opÃ©rationnel de ses applications Scala / Akka.\r\nKubernetes l'aide Ã  porter tout cela sur  GCP et AWS",
    "twitter": "cestpasdur",
    "company": "Freelance",
    "url": "",
    "avatar": "https://secure.gravatar.com/avatar/e5b415661373232ef6462eac70eb7670?s=500",
    "talks": [
        {
            "title": "Une API affinÃ©e 18 mois",
            "description": "Un langage statiquement typÃ©, c'est bien, mais il est possible de stocker l'oeuvre de Shakespeare dans un String. \r\nIl est frustrant de ne pas pourvoir Ãªtre plus prÃ©cis que les types primitifs.\r\n\r\nAvec Refined, vous pourrez  ajouter des contrÃ´les plus stricts sur votre API Scala, celle-ci ne laissera passer que les types dÃ©finis (valeur numÃ©rique positive, liste de taille bornÃ©e...)\r\n\r\nIl est Ã©galement simple d'ajouter des contraintes plus prÃ©cises sur les types pour obtenir une validation plus fine de votre API REST.\r\n\r\nCerise sur le fromage, se baser sur des types plus prÃ©cis permettra de gÃ©nÃ©rer une documentation Swagger plus prÃ©cise.",
            "abstract": "Un langage statiquement typÃ©, c'est bien, mais il est possible de stocker l'oeuvre de Shakespeare dans un String. \n\nDÃ©couvrez comment utiliser Refined pour ajouter des contrÃ´les plus stricts sur votre API Scala,  validation fine des requÃªtes  REST, ou la documenter automatiquement avec Swagger.",
            "audience_level": "All",
            "talk_format": "Talk (45 minutes)",
            "tags": [
                "#Scala #Refined #",
                "#TypeSystem",
                "#phantomTypes",
                "ğŸ‡«ğŸ‡·"
            ]
        }
    ]
}