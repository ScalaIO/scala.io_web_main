{
    "name": "Yassine MEHERZI",
    "bio": "",
    "twitter": "yassine_meherzi",
    "company": "SociÃ©tÃ© GÃ©nÃ©rale",
    "url": "",
    "avatar": "/assets/images/speakers/yassine-meherzi.jpg",
    "talks": [
        {
            "title": "Î»-Calculus : A Brief History of Functional Programming",
            "description": "Î»-Calculus (ou Lambda-Calcul) est un systÃ¨me formel de logique mathÃ©matique permettant d'exprimer des calculs sous forme de fonctions.\r\nL'influence de Lambda Calculus sur les diffÃ©rents langages fonctionnels n'est pas seulement due au fait que le formalisme est Â« Turing-complete Â», mais Ã©galement Ã  sa simplicitÃ© et Ã  son caractÃ¨re expressif.\r\nMalheureusement, ce formalisme reste encore peu connu bien quâ€™il constitue les fondations de plusieurs langages fonctionnels comme Lisp, Haskell et Scala.\r\nDans ce talk, nous allons dÃ©couvrir ce que câ€™est le Î»-calculus, son histoire et, plus important encore, son application Ã  la programmation fonctionnelle.",
            "abstract": "Î»-Calculus reste peu connu parmi les dÃ©veloppeurs bien quâ€™il constitue les fondations de plusieurs langages fonctionnels comme Lisp, Haskell et Scala. Dans ce talk, nous allons dÃ©couvrir ce que c'est Î»-calculus, son histoire et, plus important encore, son application Ã  la programmation fonctionnelle",
            "audience_level": "All",
            "talk_format": "Short Talk (20 minutes)",
            "tags": [
                "f",
                "Functional-Programming History Languages",
                "ðŸ‡«ðŸ‡·"
            ]
        }
    ]
}